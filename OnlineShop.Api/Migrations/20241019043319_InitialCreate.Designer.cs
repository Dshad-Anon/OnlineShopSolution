// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShop.Api.Data;

#nullable disable

namespace OnlineShop.Api.Migrations
{
    [DbContext(typeof(OnlineShopDbContext))]
    [Migration("20241019043319_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineShop.Api.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("OnlineShop.Api.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("OnlineShop.Api.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Apple MacBook Pro 14-inch with M1 Pro chip, 16GB RAM, 512GB SSD",
                            ImageURL = "/Images/Laptops/Laptop1.png",
                            Name = "MacBook Pro 14\"",
                            Price = 2000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Dell XPS 13 Laptop with Intel Core i7, 16GB RAM, 1TB SSD",
                            ImageURL = "/Images/Laptops/Laptop2.png",
                            Name = "Dell XPS 13",
                            Price = 1500m,
                            Quantity = 25
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "HP Spectre x360 Convertible Laptop with Intel Core i5, 8GB RAM, 512GB SSD",
                            ImageURL = "/Images/Laptops/Laptop3.png",
                            Name = "HP Spectre x360",
                            Price = 1200m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Lenovo ThinkPad X1 Carbon, Intel Core i7, 16GB RAM, 1TB SSD",
                            ImageURL = "/Images/Laptops/Laptop4.png",
                            Name = "Lenovo ThinkPad X1 Carbon",
                            Price = 1800m,
                            Quantity = 40
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "Dell UltraSharp 27-inch 4K Monitor with USB-C connectivity",
                            ImageURL = "/Images/Monitors/Monitor1.png",
                            Name = "Dell UltraSharp 27\"",
                            Price = 600m,
                            Quantity = 60
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Samsung Odyssey G7 32-inch Curved Gaming Monitor, 240Hz refresh rate",
                            ImageURL = "/Images/Monitors/Monitor2.png",
                            Name = "Samsung Odyssey G7",
                            Price = 700m,
                            Quantity = 40
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "LG 34-inch UltraWide Monitor, 144Hz, with HDR support",
                            ImageURL = "/Images/Monitors/Monitor3.png",
                            Name = "LG 34\" UltraWide",
                            Price = 800m,
                            Quantity = 35
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Description = "Acer Predator 27-inch Gaming Monitor, 144Hz, with G-Sync",
                            ImageURL = "/Images/Monitors/Monitor4.png",
                            Name = "Acer Predator 27\"",
                            Price = 550m,
                            Quantity = 70
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "Apple iPhone 14 Pro, 256GB, 6.1-inch display",
                            ImageURL = "/Images/Phones/Phone1.png",
                            Name = "iPhone 14 Pro",
                            Price = 1100m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Description = "Samsung Galaxy S23 Ultra, 512GB, 108MP camera",
                            ImageURL = "/Images/Phones/Phone2.png",
                            Name = "Samsung Galaxy S23 Ultra",
                            Price = 1200m,
                            Quantity = 90
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            Description = "Google Pixel 8, 128GB, 6.3-inch OLED display",
                            ImageURL = "/Images/Phones/Phone3.png",
                            Name = "Google Pixel 8",
                            Price = 800m,
                            Quantity = 85
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            Description = "OnePlus 11, 256GB, 50MP triple camera setup",
                            ImageURL = "/Images/Phones/Phone4.png",
                            Name = "OnePlus 11",
                            Price = 900m,
                            Quantity = 60
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 4,
                            Description = "Apple Watch Series 9 with GPS, 41mm, Space Gray",
                            ImageURL = "/Images/Watches/Watch1.png",
                            Name = "Apple Watch Series 9",
                            Price = 400m,
                            Quantity = 120
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            Description = "Samsung Galaxy Watch 6, 44mm, with LTE support",
                            ImageURL = "/Images/Watches/Watch2.png",
                            Name = "Samsung Galaxy Watch 6",
                            Price = 350m,
                            Quantity = 110
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 4,
                            Description = "Garmin Fenix 7, Multisport GPS watch with heart rate monitor",
                            ImageURL = "/Images/Watches/Watch3.png",
                            Name = "Garmin Fenix 7",
                            Price = 600m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 4,
                            Description = "Fitbit Versa 4, Fitness and Health Tracker, 40mm",
                            ImageURL = "/Images/Watches/Watch4.png",
                            Name = "Fitbit Versa 4",
                            Price = 250m,
                            Quantity = 150
                        });
                });

            modelBuilder.Entity("OnlineShop.Api.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Laptops"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Monitors"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Phones"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Watches"
                        });
                });

            modelBuilder.Entity("OnlineShop.Api.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserName = "Alice"
                        },
                        new
                        {
                            Id = 2,
                            UserName = "John"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
